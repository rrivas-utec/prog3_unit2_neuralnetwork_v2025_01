# CLion remote docker environment (How to build docker container, run and stop it)
#
# Build and run:
#   docker build -t clion/remote-cpp-env:0.5 -f Dockerfile.remote-cpp-env .
#   docker run -d --cap-add sys_ptrace -p127.0.0.1:2222:22 --name clion_remote_env clion/remote-cpp-env:0.5
#   ssh-keygen -f "$HOME/.ssh/known_hosts" -R "[localhost]:2222"
#
# stop:
#   docker stop clion_remote_env
# 
# ssh credentials (test user):
#   user@password 

FROM gradescope/auto-builds:ubuntu-20.04

RUN DEBIAN_FRONTEND="noninteractive"

# Python repository
RUN add-apt-repository ppa:deadsnakes/ppa

# C++ Repositorio
RUN add-apt-repository ppa:ubuntu-toolchain-r/test

RUN apt-get update
RUN apt-get install -y \
    tzdata \
    ssh \
    build-essential \
    manpages-dev \
    software-properties-common \
    libtbb-dev \
    gcc-9 \
    g++-9 \
    gdb \
    clang \
    rsync \
    tar \
    python \
    valgrind \
    catch \
    cppcheck \
    dos2unix \
    jq

# CMake
RUN apt-get remove --purge cmake
RUN hash -r
RUN wget \
    https://github.com/Kitware/CMake/releases/download/v3.20.5/cmake-3.20.5-linux-x86_64.sh \
    -O /opt/cmake-3.20.5-linux-x86_64.sh
RUN chmod +x /opt/cmake-3.20.5-linux-x86_64.sh
RUN cd opt
RUN printf 'y\ny\n' | bash /opt/cmake-3.20.5-linux-x86_64.sh --prefix=/opt
RUN ln -s /opt/cmake-3.20.5-linux-x86_64/bin/* /usr/bin
RUN cd /

# Update C++ alternatives
RUN apt-get clean
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 \
    --slave /usr/bin/g++ g++ /usr/bin/g++-9 \
    --slave /usr/bin/gcov gcov /usr/bin/gcov-9

# Install Python dependencies declared in requirements.txt
COPY source/requirements.txt /autograder/requirements.txt
RUN pip3 install -r /autograder/requirements.txt

RUN mkdir /autograder/results
COPY source/bootstrap.py /autograder/bootstrap.py
COPY source/run_autograder /autograder/run_autograder
COPY source/grade_util.py /autograder/grade_util.py

RUN ( \
    echo 'LogLevel DEBUG2'; \
    echo 'PermitRootLogin yes'; \
    echo 'PasswordAuthentication yes'; \
    echo 'Subsystem sftp /usr/lib/openssh/sftp-server'; \
  ) > /etc/ssh/sshd_config_test_clion 

RUN useradd -m user \
  && yes password | passwd user

RUN usermod -s /bin/bash user

WORKDIR /autograder/

CMD ["/usr/sbin/sshd", "-D", "-e", "-f", "/etc/ssh/sshd_config_test_clion"]
